plugins {
	ÃŸid 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
	id 'war'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	compile project(':hilambda')
	compile group: 'com.alibaba', name: 'druid', version: '1.0.26'
	compile("org.springframework:spring-jms:5.2.3.RELEASE")
	implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-autoconfigure'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.1.1'

	implementation("org.springframework.boot:spring-boot-starter")
	
	//developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.h2database:h2'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'io.projectreactor:reactor-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	compile('mysql:mysql-connector-java')
	runtimeOnly 'org.springframework.boot:spring-boot-starter-tomcat'
// https://mvnrepository.com/artifact/javax.jms/javax.jms-api
	compile group: 'javax.jms', name: 'javax.jms-api', version: '2.0.1'
	

}

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
	compile.exclude(group: 'ch.qos.logback')

}


test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}
